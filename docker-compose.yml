version: '3.8'

services:
  # Frontend
  frontend:
    build: .
    container_name: holded-frontend
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      - NODE_ENV=development
    networks:
      - holded-network
    depends_on:
      - backend

  # Backend API
  backend:
    build: ./backend
    container_name: holded-backend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: development
      MONGODB_URI: mongodb://mongodb:27017/holded-analysis
      REDIS_URL: redis://redis:6379
    env_file:
      - ./backend/.env
    depends_on:
      - mongodb
      - redis
    volumes:
      - ./backend/uploads:/app/uploads
      - ./backend/logs:/app/logs
    networks:
      - holded-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # MongoDB
  mongodb:
    image: mongo:7.0
    container_name: holded-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_PASSWORD:-strongpassword}
      MONGO_INITDB_DATABASE: holded-analysis
    volumes:
      - mongodb_data:/data/db
    networks:
      - holded-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 30s
      timeout: 10s
      retries: 5

  # Redis
  redis:
    image: redis:7-alpine
    container_name: holded-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - holded-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy (optional for production-like setup)
  nginx:
    image: nginx:alpine
    container_name: holded-nginx
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./nginx-compose.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - frontend
      - backend
    networks:
      - holded-network

networks:
  holded-network:
    driver: bridge

volumes:
  mongodb_data:
  redis_data: